/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NativeTokenPayment,
  NativeTokenPaymentInterface,
} from "../../../contracts/core/NativeTokenPayment";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceProviderAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_adminAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "orderId",
        type: "string",
      },
    ],
    name: "PaymentMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adminAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNativePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "orderId",
        type: "string",
      },
    ],
    name: "getPaymentDetail",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct NativeTokenPayment.PaymentDetail",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "orderId",
        type: "string",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "payments",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceProvider",
    outputs: [
      {
        internalType: "contract IPriceProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newPriceProvider",
        type: "address",
      },
    ],
    name: "setPriceProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_usdPrice",
        type: "uint256",
      },
    ],
    name: "setUsdPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200118038038062001180833981016040819052620000349162000170565b6001805562000045600033620000a3565b620000717fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533620000a3565b600280546001600160a01b039384166001600160a01b03199182161790915560048054929093169116179055620001a8565b620000af8282620000b3565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620000af576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200010f3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b80516001600160a01b03811681146200016b57600080fd5b919050565b600080604083850312156200018457600080fd5b6200018f8362000153565b91506200019f6020840162000153565b90509250929050565b610fc880620001b86000396000f3fe6080604052600436106100fe5760003560e01c80636619aa8611610095578063b888879e11610064578063b888879e146102ca578063c314233014610302578063d547741f14610322578063f946871314610342578063fc6f9468146103b857600080fd5b80636619aa861461024b57806375b238fc1461026157806391d1485414610295578063a217fddf146102b557600080fd5b80632f2ff15d116100d15780632f2ff15d146101a057806335bc654d146101c057806336568abe1461020b578063372aa2241461022b57600080fd5b806301ffc9a71461010357806317430c9e14610138578063248a9ca31461015b5780632b66d72e1461018b575b600080fd5b34801561010f57600080fd5b5061012361011e366004610c68565b6103d8565b60405190151581526020015b60405180910390f35b34801561014457600080fd5b5061014d61040f565b60405190815260200161012f565b34801561016757600080fd5b5061014d610176366004610c92565b60009081526020819052604090206001015490565b61019e610199366004610cc1565b6104b2565b005b3480156101ac57600080fd5b5061019e6101bb366004610d8e565b61071f565b3480156101cc57600080fd5b506101e06101db366004610cc1565b610749565b6040805182516001600160a01b0316815260208084015190820152918101519082015260600161012f565b34801561021757600080fd5b5061019e610226366004610d8e565b6107c5565b34801561023757600080fd5b5061019e610246366004610dba565b610843565b34801561025757600080fd5b5061014d60035481565b34801561026d57600080fd5b5061014d7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b3480156102a157600080fd5b506101236102b0366004610d8e565b610890565b3480156102c157600080fd5b5061014d600081565b3480156102d657600080fd5b506002546102ea906001600160a01b031681565b6040516001600160a01b03909116815260200161012f565b34801561030e57600080fd5b5061019e61031d366004610c92565b6108b9565b34801561032e57600080fd5b5061019e61033d366004610d8e565b6108e9565b34801561034e57600080fd5b5061039361035d366004610cc1565b80516020818301810180516005825292820191909301209152805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b03909416845260208401929092529082015260600161012f565b3480156103c457600080fd5b506004546102ea906001600160a01b031681565b60006001600160e01b03198216637965db0b60e01b148061040957506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080600260009054906101000a90046001600160a01b03166001600160a01b03166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610dd5565b905080600354670de0b6b3a76400006104a29190610e04565b6104ac9190610e1b565b91505090565b6104ba61090e565b60008151116105105760405162461bcd60e51b815260206004820152601860248201527f4f726465722049442063616e6e6f7420626520656d707479000000000000000060448201526064015b60405180910390fd5b60006001600160a01b031660058260405161052b9190610e61565b908152604051908190036020019020546001600160a01b0316146105895760405162461bcd60e51b815260206004820152601560248201527413dc99195c88125108185b1c9958591e481d5cd959605a1b6044820152606401610507565b600061059361040f565b9050803410156105dc5760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606401610507565b6004546040516000916001600160a01b03169034908381818185875af1925050503d8060008114610629576040519150601f19603f3d011682016040523d82523d6000602084013e61062e565b606091505b50509050806106715760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610507565b6040805160608101825233815234602082015242818301529051600590610699908690610e61565b9081526040805160209281900383018120845181546001600160a01b0319166001600160a01b0390911617815592840151600184015592015160029091015533907f5ce0614a46459714585c219d6fb0dd3a4b01b81fc18567ebe68bf418067c91d4906107099034908790610ea9565b60405180910390a2505061071c60018055565b50565b60008281526020819052604090206001015461073a81610967565b6107448383610971565b505050565b610776604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b6005826040516107869190610e61565b90815260408051918290036020908101832060608401835280546001600160a01b03168452600181015491840191909152600201549082015292915050565b6001600160a01b03811633146108355760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610507565b61083f82826109f5565b5050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561086d81610967565b50600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756108e381610967565b50600355565b60008281526020819052604090206001015461090481610967565b61074483836109f5565b6002600154036109605760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610507565b6002600155565b61071c8133610a5a565b61097b8282610890565b61083f576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556109b13390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6109ff8282610890565b1561083f576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b610a648282610890565b61083f57610a7181610ab3565b610a7c836020610ac5565b604051602001610a8d929190610eca565b60408051601f198184030181529082905262461bcd60e51b825261050791600401610f3f565b60606104096001600160a01b03831660145b60606000610ad4836002610e04565b610adf906002610f52565b67ffffffffffffffff811115610af757610af7610cab565b6040519080825280601f01601f191660200182016040528015610b21576020820181803683370190505b509050600360fc1b81600081518110610b3c57610b3c610f65565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610b6b57610b6b610f65565b60200101906001600160f81b031916908160001a9053506000610b8f846002610e04565b610b9a906001610f52565b90505b6001811115610c12576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610bce57610bce610f65565b1a60f81b828281518110610be457610be4610f65565b60200101906001600160f81b031916908160001a90535060049490941c93610c0b81610f7b565b9050610b9d565b508315610c615760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610507565b9392505050565b600060208284031215610c7a57600080fd5b81356001600160e01b031981168114610c6157600080fd5b600060208284031215610ca457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610cd357600080fd5b813567ffffffffffffffff80821115610ceb57600080fd5b818401915084601f830112610cff57600080fd5b813581811115610d1157610d11610cab565b604051601f8201601f19908116603f01168101908382118183101715610d3957610d39610cab565b81604052828152876020848701011115610d5257600080fd5b826020860160208301376000928101602001929092525095945050505050565b80356001600160a01b0381168114610d8957600080fd5b919050565b60008060408385031215610da157600080fd5b82359150610db160208401610d72565b90509250929050565b600060208284031215610dcc57600080fd5b610c6182610d72565b600060208284031215610de757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761040957610409610dee565b600082610e3857634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015610e58578181015183820152602001610e40565b50506000910152565b60008251610e73818460208701610e3d565b9190910192915050565b60008151808452610e95816020860160208601610e3d565b601f01601f19169290920160200192915050565b828152604060208201526000610ec26040830184610e7d565b949350505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610f02816017850160208801610e3d565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610f33816028840160208801610e3d565b01602801949350505050565b602081526000610c616020830184610e7d565b8082018082111561040957610409610dee565b634e487b7160e01b600052603260045260246000fd5b600081610f8a57610f8a610dee565b50600019019056fea2646970667358221220c34692de1f495b7163063726b0269981c694b3124be1458efbf374ba0ef511ef64736f6c63430008130033";

type NativeTokenPaymentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NativeTokenPaymentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NativeTokenPayment__factory extends ContractFactory {
  constructor(...args: NativeTokenPaymentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    priceProviderAddress: PromiseOrValue<string>,
    _adminAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NativeTokenPayment> {
    return super.deploy(
      priceProviderAddress,
      _adminAddress,
      overrides || {}
    ) as Promise<NativeTokenPayment>;
  }
  override getDeployTransaction(
    priceProviderAddress: PromiseOrValue<string>,
    _adminAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      priceProviderAddress,
      _adminAddress,
      overrides || {}
    );
  }
  override attach(address: string): NativeTokenPayment {
    return super.attach(address) as NativeTokenPayment;
  }
  override connect(signer: Signer): NativeTokenPayment__factory {
    return super.connect(signer) as NativeTokenPayment__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NativeTokenPaymentInterface {
    return new utils.Interface(_abi) as NativeTokenPaymentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NativeTokenPayment {
    return new Contract(address, _abi, signerOrProvider) as NativeTokenPayment;
  }
}
